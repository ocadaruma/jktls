name: CI
on:
  push:
    branches:
    - master
    tags:
    - '*'
  pull_request:
    branches:
    - master
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8, 11]
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: modprobe tls
      run: sudo modprobe tls
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Execute test
      uses: eskatos/gradle-command-action@v1
      with:
        arguments: build check
  native-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Execute test
      working-directory: ./native
      run: cargo test
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build native lib
      working-directory: ./core
      run: ../gradlew copyNativeLib
    - name: Save native lib output
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v2
      with:
        name: native-libs
        path: core/build/native/*
  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build, test, native-test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Restore native libs
      uses: actions/download-artifact@v2
      with:
        name: native-libs
        path: core/build/native
    - id: get-tag-version
      run: |
        version=$(echo ${{github.ref}} | cut -f3 -d/ | sed 's/^v//')
        echo "::set-output name=version::$version"
    - name: Build universal jar
      working-directory: ./core
      run: ../gradlew -Pversion=${{ steps.get-tag-version.outputs.version }} -Psnapshot=false universalJar
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: core/build/libs/core-${{ steps.get-tag-version.outputs.version }}-universal.jar
        asset_name: jktls-${{ steps.get-tag-version.outputs.version }}-universal.jar
        asset_content_type: application/octet-stream
